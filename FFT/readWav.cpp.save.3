#include<iostream>
#include<fstream>
#include "readWav.h"
using namespace std;

int sampleRate = 44100;
int bitDepth = 8;
float windowTime = 0.10;

WavReader::WavReader()
{
int m_packetLength =0;
}

WavReader::~WavReader()
{

}

int WavReader::init()
{
cout<<"windowTime = "<<windowTime<<"\nbitDepth = "<<bitDepth<<"\nsampleRate = "<<sampleRate<<endl;
this->m_packetLength = windowTime * bitDepth/8 * sampleRate;
cout<<"m_packetLength = "<<this->m_packetLength<<endl;
char m_buff[this->m_packetLength];
}



int WavReader::GetWavInfo(ifstream& iFile)
{
//////METHOD TO GET SAMPLE RATE///////////
int bitDepth = 8;
	std::cout << "Bit Depth = " << std::cout <<bitDepth;
return 0;
}



int WavReader::ReadWav(ifstream& iFile)
{
int n = 0;
cout<<"ReadWav run"<<endl;

	//Open an input and output stream in binary mode
	if(iFile.is_open())
	{
	  cout<<"File is open"<<endl;
	  cout<<"m_packetLength="<<this->m_packetLength<<endl;
          while(n < m_packetLength)
	  {
			int loc = iFile.tellg();
                        cout <<n<<":"<<loc<<endl;

			n++;
	  }
	}
	else
	{
	  cout<<"Not opened"<<endl;
	}

//	for(n=0; n<m_maxdur; n++)
//	{
//		cout<<buffer[n]<<" ";
//	}
return 0;

}
